openapi: 3.0.0

info:
  title: Mon API
  version: '1.0.0'
  description: TP Outils et méthodes de développement

servers:
  - url: https://mon-api.com/v1
    description: Serveur principal

paths:
  /bakeries:
    get:
      summary: Get the list of bakeries
      parameters:
        - "$ref": "#/components/parameters/per-page"
        - "$ref": "#/components/parameters/page"
        - "$ref": "#/components/parameters/created-by"
      responses:
        "200":
          description: 'no issue'

    post:
      summary: Add a bakery to the list
      parameters:
        - "$ref": "#/components/parameters/bakery-id"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 'no issues'


  /bakeries/{bakeryId}:
    put:
      summary: Modify a bakery on the list
      operationId: editBakery
      security:
        - bearerAuth: []
      parameters:
        - "$ref": "#/components/parameters/bakery-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BakeryCreation"
      responses:
        "200":
          description: 'no issue'

    delete:
      summary: Delete a bakery on the list
      security:
        - bearerAuth: []
      parameters:
        - "$ref": "#/components/parameters/bakery-id"
      responses:
        "200":
          description: 'no issue'


  /bakeries/{bakeryId}/bakers:
    get:
      summary: Get the list of bakers for a bakery
      parameters:
        - "$ref": "#/components/parameters/bakery-id"
        - "$ref": "#/components/parameters/per-page"
        - "$ref": "#/components/parameters/page"
        - "$ref": "#/components/parameters/created-by"
      responses:
        "200":
          description: 'no issues'


components:
  schemas:
    BakeryCreation:
      type: object
      properties:
        owner:
          type: string
          example: Nicolas
        creation-year:
          type: integer
          min: 1800
          max: 2025
          example: 1999
        info:
          type: object
          properties:
            address:
              type: string
              example: 1 Rue de Nancy 57000 Metz
            phone-number:
              type: integer
              example: 0123456789 
            
  parameters:
    bakery-id:
      name: bakeryId
      description: ID de la bakery
      in: path
      schema:
        type: integer
      required: true
    per-page:
      name: per_page
      description: Nombre de résultats par page
      in: query
      schema:
        type: integer
        default: 15
        maximum: 50
    page:
      name: page
      description: Numéro de page des résultats
      in: query
      schema: 
        type: integer
        default: 1
    created-by:
      name: created_by
      description: Utilisateur qui a créé l'entrée
      in: query
      schema:
        type: string
  responses:
    not_found:
      description: Resource not found
    forbidden:
      description: Forbidden due to lack of permission
    internal_server_error:
        description: Internal Server Error
    no_content:
        description: No Content
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

